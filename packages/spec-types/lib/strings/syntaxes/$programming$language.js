"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.$vb$ = exports.$vb$net$ = exports.$abap$ = exports.$basic$ = exports.$object$pascal$ = exports.$delphi$ = exports.$pascal$ = exports.$ada$ = exports.$cobol$ = exports.$apl$ = exports.$j$ = exports.$racket$ = exports.$common$lisp$ = exports.$scheme$ = exports.$lisp$ = exports.$fortran$ = exports.$f$sharp$ = exports.$ocaml$ = exports.$erlang$ = exports.$elixir$ = exports.$clojure$ = exports.$haskell$ = exports.$julia$ = exports.$r$ = exports.$perl$ = exports.$php$ = exports.$ruby$ = exports.$scala$ = exports.$swift$ = exports.$kotlin$ = exports.$go$lang$ = exports.$rust$ = exports.$c$$minus$$minus$ = exports.$c$$plus$$plus$ = exports.$c$$sharp$ = exports.$c$ = exports.$python$ = exports.$typescript$ = exports.$javascript$ = exports.$java$ = exports.$programming$language = void 0;
exports.$programming$language = '$programming$language';
exports.$java$ = '$java$';
exports.$javascript$ = '$javascript$';
exports.$typescript$ = '$typescript$';
exports.$python$ = '$python$';
exports.$c$ = '$c$';
exports.$c$$sharp$ = '$c$$sharp$';
exports.$c$$plus$$plus$ = '$c$$plus$$plus$';
exports.$c$$minus$$minus$ = '$c$$minus$$minus$';
exports.$rust$ = '$rust$';
exports.$go$lang$ = '$go$lang$';
exports.$kotlin$ = '$kotlin$';
exports.$swift$ = '$swift$';
exports.$scala$ = '$scala$';
exports.$ruby$ = '$ruby$';
exports.$php$ = '$php$';
exports.$perl$ = '$perl$';
exports.$r$ = '$r$';
exports.$julia$ = '$julia$';
exports.$haskell$ = '$haskell$';
exports.$clojure$ = '$clojure$';
exports.$elixir$ = '$elixir$';
exports.$erlang$ = '$erlang$';
exports.$ocaml$ = '$ocaml$';
exports.$f$sharp$ = '$f$sharp$';
exports.$fortran$ = '$fortran$';
exports.$lisp$ = '$lisp$';
exports.$scheme$ = '$scheme$';
exports.$common$lisp$ = '$common$lisp$';
exports.$racket$ = '$racket$';
exports.$j$ = '$j$';
exports.$apl$ = '$apl$';
exports.$cobol$ = '$cobol$';
exports.$ada$ = '$ada$';
exports.$pascal$ = '$pascal$';
exports.$delphi$ = '$delphi$';
exports.$object$pascal$ = '$object$pascal$';
exports.$basic$ = '$basic$';
exports.$abap$ = '$abap$';
exports.$vb$net$ = '$vb$net$';
exports.$vb$ = '$vb$';
// export type TaggedProgrammingLanguage = TaggedFormat<$Programming$Language>;
